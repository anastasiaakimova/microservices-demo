server.port=8765

#id приложения - желательно указывать всегда в микросервисах
spring.application.name=api-gateway

# url куда будет происходить регистрация микросервисов
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# более короткое отображение логов
logging.pattern.console=%C{1.} [%-5level] %d{HH:mm:ss} - %msg%n

# для корректной работы api gateway
#с помощью этого параметра происходит определение и перенаправление
spring.cloud.gateway.discovery.locator.enabled=true
# позволяет независимо от регистра букв указывать название сервиса
# если этот параметр убрать, то придется соблюдать регистр букв
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# можно вручную перенаправлять запрос на нужный микросервис
#id самого роута
spring.cloud.gateway.routes[0].id=test
# к какому именно инстансу будет идти обращение
# lb - load balancer - не прописываем ни адрес, ни порт
spring.cloud.gateway.routes[0].uri=lb://eclient
# предикаты с помощью которых будет мапиться или находиться нужный запрос
# показывает что этот запрос должен попасть на eclient и будет вызван этот микросервис
spring.cloud.gateway.routes[0].predicates[0]=Path=/main/test
# указываем каким метоодом этот путь будем вызывать
spring.cloud.gateway.routes[0].predicates[1]=Method=GET

spring.cloud.gateway.routes[1].id=name
spring.cloud.gateway.routes[1].uri=lb://eclient2
spring.cloud.gateway.routes[1].predicates[0]=Path=/new/name
spring.cloud.gateway.routes[1].predicates[1]=Method=GET



